########### Enhancement rules #########
# These rules are constantly updated and may not reflect the rules in the paper

rulegroup {
  name: "Question words"
  priority: 1
  rule {
    name: "question words invoking COUNT"
    priority: 1
    # ¿Cuántas ciudades
    # Howmany cities (how many is a single word in spanish)
    # change the postag of from ADV to ADV:COUNT:WH.
    tregex: "/w-.*-(?:כמה|cuánto|cuánta|cuántos|cuántas|cuanto|cuanta|cuantos|cuantas)$/=word !>> /^l-acl.*$/ $ /t-(?:PRON|DET|ADV|ADJ)/=postag"
    transformation {
      target: "postag"
      action: CHANGE_LABEL 
      label: "{postag}:COUNT:WH"
    }
  }
  rule {
    name: "Enhance question words pos tags"
    priority: 5
	# "when" did aldi originate?
    # change the postag of "when" from ADV to ADV:WH.
    tregex: "/w-.*-(?:האם|מה|היכן|למה|איך|כמה|מי|מה|מתי|איפה|אילו|what|when|who|where|which|how|whom|whose|why|quién|qué|dónde|cuándo|cuánto|cuánta|cuántos|cuántas|cuál|quiénes|cuáles|cómo|adónde|porqué|quien|que|donde|cuando|cuanto|cuanta|cuantos|cuantas|cual|quienes|cuales|como|adonde|porque|wer|welche|welcher|wen|wem|welchen|welchem|wessen|was|welches|warum|weshalb|weswegen|wieso|wie|wofür|wofuer|wozu|womit|wodurch|worum|worüber|worueber|wobei|wovon|wo|wohin|woher|woran|worin|worauf|worunter|wovor|wohinter|wann|wan|wieviele|wieviel|wievele|wievievel)$/=word !>> /^l-acl.*$/ $ /t-(?:PRON|DET|ADV|ADJ|QW)/=postag"
    transformation {
      target: "postag"
      action: CHANGE_LABEL 
      label: "{postag}:WH"
    }
  }
  # Below are special cases when COUNT phenomenon requires wideer context
  rule {
    name: "nmod indicating counting"
    # "number" of "people"
    # "count" of "films"
    priority: 10
    tregex: "/^l-nmod$/=relation $ /^w-.*-(count|number|total|anzahl|número|numero)$/ $ /^t-NOUN$/ < /^l-case$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "{relation}:count"
    }
  }
  rule {
    name: "advmod in how many"
    # "how" "many"
    priority: 1
    tregex: "/^l-advmod$/=relation < /^w-.*-(?:how|wie)$/ $ /^w-.*-(?:many|viel|viele|vielen)$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "{relation}:count"
    }
  }
  rule {
    name: "advmod in how many"
    # "how" many "people"
    # how attached to people instead of many. This is likely a parser mistake. 
    priority: 1
    tregex: "/^l-advmod$/=relation < /^w-.*-(?:how|wie)$/ $ (/^l-.*$/ < /^w-.*-(?:many|viel|viele|vielen)$/)"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "{relation}:count"
    }
  }
  # Questions without question words
  rule {
    name: "dobj when posed as a question"
    # "give" me the "capital" of UK?
    # This happens when subj is not seen with the verb. 
    priority: 5
    tregex: "/^l-dobj$/=relation !$ /^l-(?:nsubj|nsubjpass)$/ $ /^w-.*-(?:find|give|list|locate|look|name|tell|finden|finde|geben|gib|liste|suchen|schauen|nennen|erzählen|encontrar|encontrarnos|bien|dame|darnos|dar|lista|localizar|localiza|localizarme|mira|mirame|buscar|nombre|nombrar|dime|cuéntanos)$/ $ /^t-VERB$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "{relation}:wh"
    }
  }
}
rulegroup {
  name: "Common Dependency Parser Errors. Use sparingly."
  priority: 1
  rule {
    name: "questions wrongly tagged as mark"
    priority: 1
	# "when" did aldi originate?
    # change the dependency relation of "when" to "advmod".
    # (l-root w-4-originate t-VERB (l-mark w-1-when t-ADV) (l-aux w-2-did t-AUX) (l-nsubj w-3-aldi t-PROPN) (l-punct w-5-? t-PUNCT))
    tregex: "/^l-mark$/=mark  < (/w-.*-(?:האם|מה|היכן|למה|איך|כמה|מי|מה|מתי|איפה|what|when|who|where|which|how|whom|whose|why|quién|qué|dónde|cuándo|cuánto|cuánta|cuántos|cuántas|cuál|quiénes|cuáles|cómo|adónde|porqué|quien|que|donde|cuando|cuanto|cuanta|cuantos|cuantas|cual|quienes|cuales|como|adonde|porque|wer|welche|welcher|wen|wem|welchen|welchem|wessen|was|welches|warum|weshalb|weswegen|wieso|wie|wofür|wofuer|wozu|womit|wodurch|worum|worüber|worueber|wobei|wovon|wo|wohin|woher|woran|worin|worauf|worunter|wovor|wohinter|wann|wan|wieviele|wieviel|wievele|wievievel)$/=qword $ /t-(?:PRON|DET|ADV|ADJ).*$/) > /^l-root$/"
    transformation {
      target: "mark"
      action: CHANGE_LABEL 
      label: "l-advmod"
    }
  }
  rule {
    name: "questions wrongly parsed as advcl"
    priority: 1
	# "Where" to "hang" out in Chicago?
    # (l-root w-1-where t-ADV (l-advcl w-3-hang t-VERB (l-mark w-2-to t-PART) (l-compound:prt w-4-out t-ADP) (l-nmod w-6-chicago t-PROPN (l-case w-5-in t-ADP))) (l-punct w-7-? t-PUNCT))
    # change the dependency relation of "hang" to "acl".
    tregex: "/^l-advcl$/=advcl  $ (/w-.*-(?:what|when|who|where|which|how|whom|whose|why|quién|qué|dónde|cuándo|cuánto|cuánta|cuántos|cuántas|cuál|quiénes|cuáles|cómo|adónde|porqué|quien|que|donde|cuando|cuanto|cuanta|cuantos|cuantas|cual|quienes|cuales|como|adonde|porque|wer|welche|welcher|wen|wem|welchen|welchem|wessen|was|welches|warum|weshalb|weswegen|wieso|wie|wofür|wofuer|wozu|womit|wodurch|worum|worüber|worueber|wobei|wovon|wo|wohin|woher|woran|worin|worauf|worunter|wovor|wohinter|wann|wan|wieviele|wieviel|wievele|wievievel)$/=qword $ /t-(?:PRON|DET|ADV|ADJ).*$/) > /^l-root$/"
    transformation {
      target: "advcl"
      action: CHANGE_LABEL 
      label: "l-acl"
    }
  }
  rule {
    name: "questions not parsed as nmod"
    priority: 1
	# what city did Obama come from?
    # city should be nmod here
    # TODO: Ideally this should produce same parse as "Obama comes from what city", whereas the current rule procduces "Obama comes [from] what city" where [from] is invisible.
    # (l-root w-5-come t-VERB (l-dobj w-2-city t-NOUN (l-det w-1-what t-DET)) (l-aux w-3-did t-AUX) (l-nsubj w-4-obama t-PROPN) (l-nmod w-6-from t-ADP) (l-punct w-7-? t-PUNCT))
    tregex: "/^l-.*$/=root  < (/^l-.*$/=pobj <<  (/w-.*-(?:what|when|who|where|which|how|whom|whose|why|quién|qué|dónde|cuándo|cuánto|cuánta|cuántos|cuántas|cuál|quiénes|cuáles|cómo|adónde|porqué|quien|que|donde|cuando|cuanto|cuanta|cuantos|cuantas|cual|quienes|cuales|como|adonde|porque|wer|welche|welcher|wen|wem|welchen|welchem|wessen|was|welches|warum|weshalb|weswegen|wieso|wie|wofür|wofuer|wozu|womit|wodurch|worum|worüber|worueber|wobei|wovon|wo|wohin|woher|woran|worin|worauf|worunter|wovor|wohinter|wann|wan|wieviele|wieviel|wievele|wievievel)$/=qword $ /t-(?:PRON|DET|ADV|ADJ).*$/)) < (/^l-nmod$/ < /^t-ADP$/ !> /^l-acl.*$/)"
    transformation {
      target: "pobj"
      action: CHANGE_LABEL 
      label: "l-nmod"
    }
  }
  rule {
    name: "questions not parsed nmod"
    priority: 1
	# where did Obama come from?
    # where should be nmod here
    # TODO: Ideally this should produce same parse as "Obama comes from where", whereas the current rule procduces "Obama comes [from] where". Here [from] is invisible.
    tregex: "/^l-.*$/=root  < (/^l-.*$/=pobj < (/w-.*-(?:what|when|who|where|which|how|whom|whose|why|quién|qué|dónde|cuándo|cuánto|cuánta|cuántos|cuántas|cuál|quiénes|cuáles|cómo|adónde|porqué|quien|que|donde|cuando|cuanto|cuanta|cuantos|cuantas|cual|quienes|cuales|como|adonde|porque|wer|welche|welcher|wen|wem|welchen|welchem|wessen|was|welches|warum|weshalb|weswegen|wieso|wie|wofür|wofuer|wozu|womit|wodurch|worum|worüber|worueber|wobei|wovon|wo|wohin|woher|woran|worin|worauf|worunter|wovor|wohinter|wann|wan|wieviele|wieviel|wievele|wievievel)$/=qword $ /t-(?:PRON|DET|ADV|ADJ).*$/)) < (/^l-nmod$/ < /^t-ADP$/ !> /^l-acl.*$/)"
    transformation {
      target: "pobj"
      action: CHANGE_LABEL 
      label: "l-nmod"
    }
  }
}
rulegroup {
  name: "Conjunctions"
  priority: 1
  rule {
    name: "np conjunction"
    # "Bill" and "Dave"
    priority: 1
    tregex: "/^l-conj$/=relation $ /^t-(?:NOUN|PROPN|PRON|ADJ)$/ < /^t-(?:NOUN|PROPN|PRON)$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "l-conj-np"
    }
  }
  rule {
    name: "adj conjunction"
    # "red" and "blue"
    priority: 1
    tregex: "/^l-conj$/=relation $ /^t-(?:ADJ)$/ < /^t-(?:ADJ)$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "l-conj-adj"
    }
  }
  rule {
    name: "sentence conjunction"
    # Cameron "directed" Titanic and Spielber "produced" Transformers.
    priority: 1
    tregex: "/^l-conj$/=relation $ /^t-(?:VERB)$/ < /^l-dobj$/ < /^l-nsubj$/ < /^t-(?:VERB)$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "l-conj-sent"
    }
  }
  rule {
    name: "vp conjunction"
    # "directed" Titanic and "produced" Titanic.
    priority: 5
    tregex: "/^l-conj$/=relation $ /^t-(?:VERB)$/ < /^l-dobj$/ < /^t-(?:VERB)$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "l-conj-vp"
    }
  }
  rule {
    name: "vp conjunction"
    # John "ate" apple and "suffered".
    priority: 10
    tregex: "/^l-conj$/=relation $ /^t-(?:VERB)$/ $,, /^l-dobj$/ < /^t-(?:VERB)$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "l-conj-vp"
    }
  }
  rule {
    name: "verb conjunction"
    # "directed" and "produced"
    priority: 15
    tregex: "/^l-conj$/=relation $ /^t-(?:VERB)$/ < /^t-(?:VERB)$/"
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "l-conj-verb"
    }
  }
}
rulegroup {
  name: "reduced relative and relative clause extractions"
  priority: 1
  rule {
    name: "pobj extraction"
    priority: 1
    # The "country" which Darwin "belongs" to, is UK.
    # "country" Darwin was "born" in
    # country "which" Darwin was born in
	# TODO: Ideally this should produce the same parse as "Darwin was born in country", however, we produce "Darwin was born[in] country" where [in] is invisible.
    # (l-root w-1-country t-NOUN (l-acl:relcl w-5-bear t-VERB (l-dobj w-2-which t-DET) (l-nsubjpass w-3-darwin t-PROPN) (l-auxpass w-4-was t-AUX) (l-nmod w-6-at t-ADP)))
    tregex: "/^l-acl.*$/=target > /^l-.*$/=origin $ /^w-.*$/=originword < (/^l-nmod$/ < /^t-ADP$/)"
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-nmod"
      child: "v-{originword}"
    }
  }

  rule {
    name: "nsubj extraction"
    priority: 5
    tregex: "/^l-acl.*$/=target > /^l-.*$/=origin $ /^w-.*$/=originword !< /^l-(?:nsubj|nsubjpass)$/"
    # The company "bought" Youtube, owns Gmail. -- construction exists in Telugu 
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-nsubj"
      child: "v-{originword}"
    }
  }
  rule {
    name: "nsubj extraction"
    priority: 5
    tregex: "/^l-acl.*$/=target > /^l-.*$/=origin $ /^w-.*$/=originword < (/^l-nsubj$/ < /^t-(?:DET|ADV)$/)"
    # The "company" which "bought" Youtube owns Gmail.
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-nsubj"
      child: "v-{originword}"
    }
  }
  rule {
    name: "nsubjpass extraction"
    priority: 5
    tregex: "/^l-acl.*$/=target > /^l-.*$/=origin $ /^w-.*$/=originword < (/^l-nsubjpass$/ < /^t-(?:DET|ADV)$/)"
    # The "company" which is "based" in
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-nsubjpass"
      child: "v-{originword}"
    }
  }
  rule {
    name: "dobj extraction"
    priority: 10
    tregex: "/^l-acl.*$/=target > /^l-.*$/=origin $ /^w-.*$/=originword !< /^l-dobj$/"
    # The "movie" Cameron "directed"
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-dobj"
      child: "v-{originword}"
    }
  }
  rule {
    name: "dobj extraction"
    priority: 10 
    tregex: "/^l-acl.*$/=target > /^l-.*$/=origin $ /^w-.*$/=originword < (/^l-dobj$/ < /^t-(?:DET|ADV)$/)"
    # The "movie" which Cameron "directed"
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-dobj"
      child: "v-{originword}"
    }
  }
  rule {
    name: "no extraction"
    priority: 15
    tregex: "/^l-acl.*$/=relation"
	# the "issues" as he "sees" them
    transformation {
      target: "relation"
      action: CHANGE_LABEL
      label: "l-acl-other"
    }
  }
}

rulegroup {
  name: "hebrew rules"
    rule {
        name: "HE definitive determiner"
        priority: 1
        tregex: "/^l-det:def$/=relation"
        transformation {
          target: "relation"
          action: CHANGE_LABEL
          label: "l-det"
        }
      }
      rule {
              name: "HE compound related"
              priority: 1
              tregex: "/^l-compound:(smixut|affix)/=relation"
              transformation {
                target: "relation"
                action: CHANGE_LABEL
                label: "l-compound"
              }
            }
            rule {
                    name: "HE flat"
                    priority: 1
                    tregex: "/^l-flat:name/=relation"
                    transformation {
                    target: "relation"
                    action: CHANGE_LABEL
                    label: "l-compound"
                  }
           }
    rule {
            name: "HE mark"
            priority: 1
            tregex: "/^l-mark:q/=relation"
            transformation {
                target: "relation"
                action: CHANGE_LABEL
                label: "l-mark"
                }
     }
     rule {
           name: "HE case genitive accusative"
                  priority: 1
                  tregex: "/^l-case:.*$/=relation"
                  transformation {
                    target: "relation"
                    action: CHANGE_LABEL
                    label: "l-case"
                  }
      }
      rule {
                 name: "HE subject copular"
                        priority: 1
                        tregex: "/^l-nsubj:cop$/=relation"
                        transformation {
                          target: "relation"
                          action: CHANGE_LABEL
                          label: "l-nsubj"
                        }
            }

        rule {
        # incorrect, need to figure this out
                   name: "HE obj to direct obj"
                          priority: 1
                          tregex: "/^l-obj/=relation"
                          transformation {
                            target: "relation"
                            action: CHANGE_LABEL
                            label: "l-dobj"
                          }
              }
       # more rules to add: obl (oblique)
       # see https://universaldependencies.org/he/index.html
}

rulegroup {
  name: "xcomp constructions"    
  priority: 1
  rule {
    name: "object of controller as subject to the controlled verb"
    # I want John to buy a laptop
    priority: 1
    tregex: "/^l-xcomp$/=target !< /^l-nsubj$/ $ (/^l-dobj$/=origin < /^w-.*$/=originword)"
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-nsubj"
      child: "v-{originword}"
    }
  }
  rule {
    name: "subject of controller as subject to the controlled verb"
    # I want to buy laptop
    # Always assume there is an extraction.
    priority: 5
    tregex: "/^l-xcomp$/=target !< /^l-nsubj$/ $ (/^l-nsubj$/=origin < /^w-.*$/=originword)"
    transformation {
      target: "origin"
      action: ADD_CHILD
      label: "l-BIND"
      child: "v-{originword}"
    }
    transformation {
      target: "target"
      action: ADD_CHILD
      label: "l-nsubj"
      child: "v-{originword}"
    }
  }
  # TODO: Note clear how to handle "Elizabeth became queen"
  # Currently this sentence is handled as "(Elizabeth became (Elizabeth is queen))"
}
